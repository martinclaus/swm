@SET_MAKE@

FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
FC_MODEXT = @FC_MODEXT@
FC_MODINC = @FC_MODINC@
FC_MODOUT = @FC_MODOUT@
CPPFLAGS = @CPPFLAGS@

OPENMP_FCFLAGS = @OPENMP_FCFLAGS@

SED = @SED@

LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@

SET_MAKE = @SET_MAKE@

EXEEXT = @EXEEXT@

prefix = $(CURDIR)/
bindir = $(prefix)bin/
builddir = $(prefix)build/
docdir = $(prefix)doc/
includedir = $(prefix)include/
srcdir = $(prefix)src/
selfcheck_dir = $(prefix)selfcheck/

include_modelHeader = $(includedir)

UDDIR = @UDDIR@
NETDIR = @NETDIR@

bin_PROGRAMS = model$(EXEEXT)
model_SOURCES = calc_lib.f90 calendar_module.f90 diag_module.f90 dynFromFile_module.f90 ElSolv_SOR.f90 io_module.f90 memchunk_module.f90 model.f90 swm_damping_module.f90 swm_forcing_module.f90 swm_lateralmixing_module.f90 swm_module.f90 swm_timestep_module.f90 tracer_module.f90 vars_module.f90

O := -O3 $(OPENMP_FCFLAGS)
DEBUG = #-Wall #-g
FFLAGS = $(FCFLAGS) $(FCFLAGS_f90) $(defSelfCheck) $(DEBUG) $(O)
libnc = -L$(NETDIR)/lib -lnetcdf
includenc = $(FC_MODINC)$(NETDIR)/include
libud = -L$(UDDIR)/lib -ludunits
includeud = $(FC_MODINC)$(UDDIR)/include
udunitsdef = -D'UNITSPATH="$(UDDIR)/etc/udunits.dat"' -D'UD_POINTER=INTEGER(ptrKind)'
#include_dir = -Iinclude
#include_h = -Iinclude -Ibuild
#build_dir = build/
DOXYGEN = @DOXYGEN@

COMPILE = $(FC) $(FFLAGS) $(CPPFLAGS) $(includenc) $(FC_MODINC)$(builddir) $(FC_MODINC)$(include_modelHeader) $(FC_MODINC)$(includedir) -c $< $(FC_MODOUT)$(builddir) -o$(builddir)$@

VPATH = include:src:build

# conditional modules
#cl_elsolv := ElSolv_SOR # comment this line out if you don't want to use an elliptic solver in the calc_lib module
ifneq ($(strip $(cl_elsolv)),)
  $(info Elliptic solver used by calc_lib module: $(strip $(cl_elsolv)))
  cl_elsolv.o := $(cl_elsolv:%=%.o)
  defClElSolv := $(cl_elsolv:%=-D'CALC_LIB_ELLIPTIC_SOLVER=%')
  defClElSolv += $(cl_elsolv:%=-D'CALC_LIB_ELLIPTIC_SOLVER_HEADER="%.h"')
else
  $(info Elliptic solver used by calc_lib module: none)
endif

modules = vars_module calendar_module diag_module swm_module tracer_module io_module calc_lib dynFromFile_module $(cl_elsolv) memchunk_module swm_forcing_module swm_timestep_module swm_damping_module swm_lateralmixing_module
objects = $(modules:%=$(builddir)%.o)

.PHONY: all clean clean-selfcheck clean-doc selfcheck doc distclean clean-conf

all     : $(bin_PROGRAMS)
#clean

model$(EXEEXT)   : $(modules:%=%.o) model.o
	$(FC) $(FFLAGS) -o$(builddir)$@ $(objects) $(builddir)model.o $(LDFLAGS) $(libnc) $(libud)

model.o : model.f90 diag_module.o vars_module.o tracer_module.o swm_module.o calc_lib.o dynFromFile_module.o model.h io.h
	$(COMPILE)

vars_module.o : vars_module.f90 io.h
	$(COMPILE)

calendar_module.o : calendar_module.f90 calendar.h udunits.inc
	$(FC) $(FFLAGS) $(CPPFLAGS) $(udunitsdef) $(FC_MODINC)$(builddir) $(FC_MODINC)$(include_modelHeader) $(FC_MODINC)$(includedir) -c $< $(FC_MODOUT)$(builddir) -o$(builddir)$@

include/udunits.inc : $(subst -I,,$(includeud))/udunits.inc include
	@echo Convert F77 udunits interface to F90
	@$(SED) -e 's/^C/!/' -e '/#define UD_POINTER/d' $< > $@

swm_module.o : swm_module.f90 vars_module.o io_module.o swm_forcing_module.o swm_timestep_module.o swm_damping_module.o
	$(COMPILE)

diag_module.o : diag_module.f90 vars_module.o io_module.o calc_lib.o tracer_module.o swm_module.o model.h
	$(COMPILE)

io_module.o : io_module.f90 io.h vars_module.o calendar_module.o
	$(COMPILE)

ElSolv_SOR.o : ElSolv_SOR.f90 ElSolv_SOR.h vars_module.o model.h
	$(COMPILE)

tracer_module.o : tracer_module.f90 tracer_module.h vars_module.o io_module.o calc_lib.o model.h
	$(COMPILE)

calc_lib.o : calc_lib.f90 calc_lib.h vars_module.o model.h $(cl_elsolv.o)
	$(FC) $(FFLAGS) $(defClElSolv) $(FC_MODINC)$(builddir) $(FC_MODINC)$(include_modelHeader) $(FC_MODINC)$(includedir) -c $< $(FC_MODOUT)$(builddir) -o$(builddir)$@

dynFromFile_module.o : dynFromFile_module.f90 vars_module.o calc_lib.o memchunk_module.o
	$(COMPILE)

memchunk_module.o : memchunk_module.f90 io_module.o calc_lib.o vars_module.o
	$(COMPILE)

swm_forcing_module.o : swm_forcing_module.f90 model.h swm_module.h io.h vars_module.o memchunk_module.o
	$(COMPILE)

swm_timestep_module.o : swm_timestep_module.f90 model.h swm_module.h io.h vars_module.o swm_damping_module.o swm_forcing_module.o swm_lateralmixing_module.o memchunk_module.o calc_lib.o
	$(COMPILE)

swm_damping_module.o : swm_damping_module.f90 model.h swm_module.h vars_module.o
	$(COMPILE)

swm_lateralmixing_module.o : swm_lateralmixing_module.f90 model.h vars_module.o
	$(COMPILE)

include $(selfcheck_dir)Makefile

doc : doc/Doxyfile doc/html doc/latex
	@cd $(docdir) && $(DOXYGEN) $(<F)
	@cd $(docdir)/latex && $(MAKE)


# create folder if needed

include/  :
	mkdir -p $@

doc/html :
	mkdir -p $@

doc/latex :
	mkdir -p $@

distclean : clean clean-doc clean-conf clean-selfcheck

clean-conf:
	@rm -fv config.status
	@rm -fv config.log
	@rm -fv Makefile

clean :
	@rm -fv $(builddir)* include/udunits.inc

clean-doc :
	@rm -rvf $(docdir)latex $(docdir)html $(docdir)doxygen_objdb_*

clean-selfcheck :
	@rm -rf $(selfcheck_dir)/*/output/new_*
